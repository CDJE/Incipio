services:
    api.user.roles:
        class:     ApiBundle\Utils\UserRoles
        arguments: [ %security.role_hierarchy.roles% ]

    #
    # Native filters
    #
    api.filter.order_filter:
        parent: loopback_api.filter.order_filter

    api.filter.where_filter:
        parent: loopback_api.filter.where_filter


    #
    # Faker's providers
    #
    faker.provider.job:
        class:     ApiBundle\DataFixtures\Faker\Provider\JobProvider
        tags:      [ { name: hautelook_alice.faker.provider } ]

    faker.provider.mandate:
        class:     ApiBundle\DataFixtures\Faker\Provider\MandateProvider
        arguments: [ @hautelook_alice.faker ]
        tags:      [ { name: hautelook_alice.faker.provider } ]

    faker.provider.student_convention:
        class:     ApiBundle\DataFixtures\Faker\Provider\StudentConventionProvider
        arguments: [ @hautelook_alice.faker ]
        tags:      [ { name: hautelook_alice.faker.provider } ]

    faker.provider.user:
        class:     ApiBundle\DataFixtures\Faker\Provider\UserProvider
        arguments: [ @api.user.roles ]
        tags:      [ { name: hautelook_alice.faker.provider } ]


    # FOSUserBundle manager
    fos_user.user_manager.default:
        class: ApiBundle\Doctrine\ORM\UserManager
        arguments:
            -  @security.encoder_factory
            -  @fos_user.util.username_canonicalizer
            -  @fos_user.util.email_canonicalizer
            -  @fos_user.entity_manager
            -  %fos_user.model.user.class%


    #
    # Resources exposed to the API
    #
    # Job resource
    resource.job:
        parent:    api.resource
        arguments: [ ApiBundle\Entity\Job ]
        calls:
            - method:    initFilters
              arguments:
                -
                    -    @api.filter.order_filter
                    -    @api.filter.where_filter
            - method:    initNormalizationContext
              arguments: [ { groups: [ job, user ] } ]
        tags:      [ { name: api.resource } ]


    # Mandate resource
    resource.mandate:
        parent:    api.resource
        arguments: [ ApiBundle\Entity\Mandate ]
        calls:
            - method:    initFilters
              arguments:
                -
                    -    @api.filter.order_filter
                    -    @api.filter.where_filter
        tags:      [ { name: api.resource } ]


    # StudentConvention resource
    resource.student_convention:
        parent:    api.resource
        arguments: [ ApiBundle\Entity\StudentConvention ]
        calls:
            - method:    initFilters
              arguments:
                -
                    -    @api.filter.order_filter
                    -    @api.filter.where_filter
        tags:      [ { name: api.resource } ]


    # User resource
    resource.user.filter.mandate_filter:
        parent: api.filter.where_filter
        class:  ApiBundle\Doctrine\ORM\Filter\User\UserMandateFilter

    resource.user.filter.type_filter:
        parent: api.filter.where_filter
        class:  ApiBundle\Doctrine\ORM\Filter\User\UserTypeFilter

    resource.user:
        parent:    api.resource
        arguments: [ ApiBundle\Entity\User ]
        calls:
            - method:    initFilters
              arguments:
                -
                    -    @api.filter.order_filter
                    -    @api.filter.where_filter
                    -    @resource.user.filter.mandate_filter
                    -    @resource.user.filter.type_filter
            - method:    initNormalizationContext
              arguments: [ { groups: [ user, user-read ] } ]
            - method:    initDenormalizationContext
              arguments: [ { groups: [ user, user-write ] } ]
        tags:      [ { name: api.resource } ]
